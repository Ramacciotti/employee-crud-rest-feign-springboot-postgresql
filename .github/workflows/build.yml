name: Java CI with Maven and Docker  # Nome do workflow

on:
  push:
    branches: [main]  # Executa o workflow quando houver push na branch main
  pull_request:
    branches: [main]  # Executa o workflow para pull requests direcionados à branch main

jobs:
  build:
    runs-on: ubuntu-latest  # Define que o job vai rodar numa VM Ubuntu atualizada

    steps:
      - name: Checkout repository  # Passo para baixar o código do repositório
        uses: actions/checkout@v3

      - name: Set up JDK 17  # Passo para configurar o JDK 17 na VM
        uses: actions/setup-java@v3
        with:
          java-version: '17'  # Define a versão do Java que será usada
          distribution: 'temurin'  # Define a distribuição do Java (Temurin é uma distribuição OpenJDK)

      - name: Build Docker image  # Passo que constrói a imagem Docker da aplicação
        run: docker build -t employee-crud:latest .

      - name: Run Docker container with Secrets  # Passo que roda o container Docker com as variáveis secretas do GitHub
        run: docker run -d -p 8080:8080 \  # Roda container em modo destacado (-d) mapeando a porta 8080
          -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \  # Passa variável de ambiente para URL do banco
          -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \  # Passa variável de ambiente para usuário do banco
          -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \  # Passa variável de ambiente para senha do banco
          employee-crud:latest  # Nome da imagem que será executada